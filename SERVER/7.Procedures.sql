CREATE OR REPLACE PACKAGE BODY CINEPLEX AS
	
	PROCEDURE DISPLAY_HALL(N IN NUMBER)
	IS
	BEGIN
		IF(N = 1) THEN
			FOR R IN (SELECT * FROM HALL) LOOP
				DBMS_OUTPUT.PUT_LINE(R.HALLID || ' ' || R.HALLNAME || ' ' || R.CATEGORY || ' ' || R.TOTALSEATS);
			END LOOP;
		ELSIF(N = 2) THEN
			FOR R IN (SELECT * FROM HALL@SITE_MOHAKHALI) LOOP
				DBMS_OUTPUT.PUT_LINE(R.HALLID || ' ' || R.HALLNAME || ' ' || R.CATEGORY || ' ' || R.TOTALSEATS);
			END LOOP;
		ELSE 
			DBMS_OUTPUT.PUT_LINE('INVALID INPUT.');
		END IF;

	END DISPLAY_HALL;
	


	PROCEDURE DISPLAY_SHOW(N IN NUMBER)
	IS
	BEGIN
		IF(N = 1) THEN
			FOR R IN (SELECT * FROM SHOW) LOOP
			DBMS_OUTPUT.PUT_LINE(R.SHOWID || ' ' || R.SHOWTIME);
			END LOOP;
		ELSIF(N = 2) THEN
			FOR R IN (SELECT * FROM SHOW@SITE_MOHAKHALI) LOOP
			DBMS_OUTPUT.PUT_LINE(R.SHOWID || ' ' || R.SHOWTIME);
			END LOOP;
		ELSE 
			DBMS_OUTPUT.PUT_LINE('INVALID INPUT.');
		END IF;

	END DISPLAY_SHOW;
	

	PROCEDURE DISPLAY_SCHEDULE(N IN NUMBER)
	IS
	BEGIN
		IF(N = 1) THEN
			FOR R IN (SELECT * FROM SCHEDULE) LOOP
			DBMS_OUTPUT.PUT_LINE(R.V_ID || ' ' || R.H_ID || ' ' || R.S_ID || ' ' || R.M_ID || ' ' || R.SHOWDATE);
			END LOOP;
		ELSIF(N = 2) THEN
			FOR R IN (SELECT * FROM SCHEDULE@SITE_MOHAKHALI) LOOP
			DBMS_OUTPUT.PUT_LINE(R.V_ID || ' ' || R.H_ID || ' ' || R.S_ID || ' ' || R.M_ID || ' ' || R.SHOWDATE);
			END LOOP;
		ELSE 
			DBMS_OUTPUT.PUT_LINE('INVALID INPUT.');
		END IF;

	END DISPLAY_SCHEDULE;


	PROCEDURE DISPLAY_SEAT(N IN NUMBER)
	IS
	BEGIN
		IF(N = 1) THEN
			FOR R IN (SELECT * FROM SEATTYPE) LOOP
			DBMS_OUTPUT.PUT_LINE(R.SEATTYPEID || ' ' || R.V_ID || ' ' || R.POSITION || ' ' || R.PRICE);
			END LOOP;
		ELSIF(N = 2) THEN
			FOR R IN (SELECT * FROM SEATTYPE@SITE_MOHAKHALI) LOOP
			DBMS_OUTPUT.PUT_LINE(R.SEATTYPEID || ' ' || R.V_ID || ' ' || R.POSITION || ' ' || R.PRICE);
			END LOOP;
		ELSE 
			DBMS_OUTPUT.PUT_LINE('INVALID INPUT.');
		END IF;

	END DISPLAY_SEAT;


	PROCEDURE DISPLAY_MOVIES(N IN NUMBER)
	IS
	BEGIN
		IF(N = 1) THEN
			FOR R IN (SELECT * FROM MOVIES) LOOP
			DBMS_OUTPUT.PUT_LINE(R.MOVIEID || ' ' || R.TITLE || ' ' || R.CATEGORY || ' ' || R.RELEASEDATE || ' ' || R.LANGUAGE);
			END LOOP;
		ELSIF(N = 2) THEN
			FOR R IN (SELECT * FROM MOVIES@SITE_MOHAKHALI) LOOP
			DBMS_OUTPUT.PUT_LINE(R.MOVIEID || ' ' || R.TITLE || ' ' || R.CATEGORY || ' ' || R.RELEASEDATE || ' ' || R.LANGUAGE);
			END LOOP;
		ELSE 
			DBMS_OUTPUT.PUT_LINE('INVALID INPUT.');
		END IF;

	END DISPLAY_MOVIES;
	


	PROCEDURE MOVIE_SPECIFIC_INFORMATION(N IN NUMBER, M IN SCHEDULE.M_ID%TYPE)
	IS
		SHOW VARCHAR2(100);
		HALL VARCHAR2(100);
		TOTSEATS NUMBER;
		SOLDTICKETS NUMBER := 0;
		MTITLE MOVIES.TITLE%TYPE;
		AVAILABLETICKETS NUMBER;

	BEGIN	
		IF(N = 1) THEN
			SELECT TITLE INTO MTITLE FROM MOVIES WHERE MOVIEID = M;
			DBMS_OUTPUT.PUT_LINE(MTITLE || ' PLAYING');
			DBMS_OUTPUT.PUT_LINE('SCHEDULE' || '  ' || 'HALL' || '            ' || 'DATE' || '    ' || 'AVAILABLE TICKETS');
			DBMS_OUTPUT.PUT_LINE('____________________________________________________');
			FOR R IN (SELECT S_ID, H_ID,SHOWDATE FROM SCHEDULE WHERE M_ID = M) LOOP
					SELECT SHOWTIME INTO SHOW FROM SHOW WHERE SHOWID = (R.S_ID);
					SELECT HALLNAME INTO HALL FROM HALL WHERE HALLID = (R.H_ID);
					SELECT TOTALSEATS INTO TOTSEATS FROM HALL WHERE HALLID = (R.H_ID);
					SELECT COUNT(TICKETID) INTO SOLDTICKETS FROM TICKET WHERE (V_ID = N AND S_ID = R.S_ID AND M_DATE = R.SHOWDATE AND H_ID = R.H_ID);
					AVAILABLETICKETS := TOTSEATS - SOLDTICKETS;
					DBMS_OUTPUT.PUT_LINE(SHOW || '    ' || HALL || '    ' || R.SHOWDATE || '   ' || AVAILABLETICKETS);

			END LOOP;

		ELSIF(N = 2) THEN
			SELECT TITLE INTO MTITLE FROM MOVIES@SITE_MOHAKHALI WHERE MOVIEID = M;
			DBMS_OUTPUT.PUT_LINE(MTITLE || ' PLAYING');
			DBMS_OUTPUT.PUT_LINE('SCHEDULE' || '  ' || 'HALL' || '             ' || 'DATE' || '    ' || 'AVAILABLE TICKETS');
			DBMS_OUTPUT.PUT_LINE('____________________________________________________');
			FOR R IN (SELECT S_ID, H_ID,SHOWDATE FROM SCHEDULE WHERE M_ID = M) LOOP
					SELECT SHOWTIME INTO SHOW FROM SHOW@SITE_MOHAKHALI WHERE SHOWID = (R.S_ID);
					SELECT HALLNAME INTO HALL FROM HALL@SITE_MOHAKHALI WHERE HALLID = (R.H_ID);
					SELECT TOTALSEATS INTO TOTSEATS FROM HALL@SITE_MOHAKHALI WHERE HALLID = (R.H_ID);
					SELECT COUNT(TICKETID) INTO SOLDTICKETS FROM TICKET@SITE_MOHAKHALI WHERE (V_ID = N AND S_ID = R.S_ID AND M_DATE = R.SHOWDATE AND H_ID = R.H_ID);
					AVAILABLETICKETS := TOTSEATS - SOLDTICKETS;
					DBMS_OUTPUT.PUT_LINE(SHOW || '     ' || HALL || '      ' || R.SHOWDATE || '    ' || AVAILABLETICKETS);

			END LOOP;
		    DBMS_OUTPUT.PUT_LINE('______________________________________________________________________________');
	    END IF;
	END MOVIE_SPECIFIC_INFORMATION;
	
	
	
	PROCEDURE BUY_TICKETS(N IN VENUE.VENUEID%TYPE, S IN SHOW.SHOWID%TYPE, ST IN TICKET.ST_ID%TYPE, M IN MOVIES.MOVIEID%TYPE, C IN PAYMENT.C_ID%TYPE)
	IS
		VID NUMBER := N;
		HID NUMBER;
		SID NUMBER := S;
		STID NUMBER := ST;
		MID NUMBER := M;
		DT VARCHAR2(20) := SYSDATE;
		CID NUMBER := C;
		AMOUNT NUMBER;
		TM NUMBER := 0;

	BEGIN

		IF(N = 1) THEN
			SELECT DISTINCT H_ID INTO HID FROM SCHEDULE WHERE M_ID = MID;
			AMOUNT := FIND_AMOUNT(STID, HID);
			SELECT COUNT(TICKETID) INTO TM FROM TICKET;
			INSERT INTO TICKET VALUES(TM + 1, VID, HID, SID, STID, MID, DT);
			INSERT INTO PAYMENT VALUES(TM + 1, CID, TM + 1, VID, AMOUNT, DT);
			COMMIT;

		ELSIF(N = 2) THEN
			SELECT DISTINCT H_ID INTO HID FROM SCHEDULE@SITE_MOHAKHALI WHERE M_ID = MID;
			AMOUNT := FIND_AMOUNT(STID, HID);
			SELECT COUNT(TICKETID) INTO TM FROM TICKET@SITE_MOHAKHALI;
			INSERT INTO TICKET@SITE_MOHAKHALI VALUES(TM + 1, VID, HID, SID, STID, MID, DT);
			INSERT INTO PAYMENT@SITE_MOHAKHALI VALUES(TM + 1, CID, TM + 1, VID, AMOUNT, DT);
			COMMIT;
		END IF;

	END BUY_TICKETS;
	
	
	PROCEDURE USER_HISTORY(N IN VENUE.VENUEID%TYPE, C IN PAYMENT.C_ID%TYPE)
	IS
		VID NUMBER := N;
		CID NUMBER := C;

	BEGIN

		DBMS_OUTPUT.PUT_LINE('DATE' || CHR(9) || 'HALL ID' || ' ' || 'MOVIE ID' || ' ' || 'TICKET ID');
		DBMS_OUTPUT.PUT_LINE('________________________________________');
		IF(N = 1) THEN
			FOR R IN (SELECT PAYMENTDATE, H_ID, M_ID, TICKETID FROM PAYMENT INNER JOIN TICKET ON PAYMENT.T_ID = TICKET.TICKETID WHERE PAYMENT.C_ID = C) LOOP
				DBMS_OUTPUT.PUT_LINE(R.PAYMENTDATE || '   ' || R.H_ID || CHR(9) || R.M_ID || CHR(9) || R.TICKETID);
			END LOOP;

		ELSIF(N = 2) THEN
			FOR R IN (SELECT PAYMENTDATE, H_ID, M_ID, TICKETID FROM PAYMENT@SITE_MOHAKHALI INNER JOIN TICKET@SITE_MOHAKHALI ON PAYMENT.T_ID = TICKET.TICKETID WHERE PAYMENT.C_ID = C) LOOP
				DBMS_OUTPUT.PUT_LINE(R.PAYMENTDATE || '      ' || R.H_ID || '  ' || R.M_ID || ' ' || R.TICKETID);
			END LOOP;
		END IF;

	END USER_HISTORY;
	
END CINEPLEX;
/

------------------------------------------------


CREATE OR REPLACE PACKAGE BODY CINEPLEX_ADMIN AS

	PROCEDURE DISPLAY_MANAGER(N IN NUMBER)
	IS
	BEGIN
		IF(N = 1) THEN
			FOR R IN (SELECT * FROM MANAGER) LOOP
			DBMS_OUTPUT.PUT_LINE(R.MANAGERID || ' ' || R.MANAGERNAME || ' ' || R.MANAGERPHONE);
			END LOOP;
			
		ELSIF(N = 2) THEN
			FOR R IN (SELECT * FROM MANAGER@SITE_MOHAKHALI) LOOP
			DBMS_OUTPUT.PUT_LINE(R.MANAGERID || ' ' || R.MANAGERNAME || ' ' || R.MANAGERPHONE);
			END LOOP;
			
		ELSIF(N = 3) THEN
			FOR R IN (SELECT * FROM MANAGER UNION SELECT * FROM MANAGER@SITE_MOHAKHALI) LOOP
			DBMS_OUTPUT.PUT_LINE(R.MANAGERID || ' ' || R.V_ID || ' ' || R.MANAGERNAME || ' ' || R.MANAGERPHONE);
			END LOOP;	
			
		ELSE 
			DBMS_OUTPUT.PUT_LINE('INVALID INPUT.');
		END IF;

	END DISPLAY_MANAGER;
	
	
	PROCEDURE REVENUE_INFORMATION(N IN NUMBER)
	IS
		SUM1 PAYMENT.AMOUNT%TYPE := 0;
		SUM2 PAYMENT.AMOUNT%TYPE := 0;
		SUM3 PAYMENT.AMOUNT%TYPE := 0;
	BEGIN
		IF(N = 1) THEN
			SELECT SUM(AMOUNT) INTO SUM1 FROM PAYMENT;
			DBMS_OUTPUT.PUT_LINE('Total income (Venue 1) : ' || SUM1);
			
		ELSIF(N = 2) THEN
			SELECT SUM(AMOUNT) INTO SUM2 FROM PAYMENT@SITE_MOHAKHALI;
			DBMS_OUTPUT.PUT_LINE('Total income (Venue 2) : ' || SUM2);
		ELSIF(N = 3) THEN
			SELECT SUM(AMOUNT) INTO SUM1 FROM PAYMENT;
			SELECT SUM(AMOUNT) INTO SUM2 FROM PAYMENT@SITE_MOHAKHALI;
			SUM3 := SUM1+SUM2;
			DBMS_OUTPUT.PUT_LINE('Total income (Venue 1 and 2) : ' || SUM3);
				
		ELSE 
			DBMS_OUTPUT.PUT_LINE('INVALID INPUT.');
		END IF;
	END REVENUE_INFORMATION;
	

END CINEPLEX_ADMIN;
/